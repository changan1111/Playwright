import { NodeSSH } from 'node-ssh';
import fs from 'fs';

const ssh = new NodeSSH();

async function runCommands() {
  try {
    // Establishing SSH connection using private key authentication
    await ssh.connect({
      host: 'your.remote.server',
      username: 'your-username',
      privateKey: fs.readFileSync('/path/to/id_rsa', 'utf-8'),  // Read private key from file
    });

    console.log('Connected to the server');

    // Execute the first command (you can add more commands as needed)
    const result1 = await ssh.execCommand('uptime');
    console.log('Uptime:', result1.stdout);

const commandList = [
  'sudo su - svc-bmc <<EOF',
  'cd tbp-qa/scripts',
  'ls -la',
  'echo "Execution complete"',
  'EOF'
];

(or)



const dynamicCommands = `
  cd tbp-qa/scripts
  ls -la
  echo "Dynamic Execution Completed"
`;

const commandBlock = `
  sudo su - svc-bmc <<EOF
  ${dynamicCommands}
  EOF
`;

const commands = commandList.join('\n');

    // Execute another command
    const result2 = await ssh.execCommand('df -h');
    console.log('Disk Space:', result2.stdout);

  } catch (error) {
    console.error('Error:', error);
  } finally {
    // Disconnecting from the server
    ssh.dispose();
    console.log('Disconnected from the server');
  }
}

runCommands();
